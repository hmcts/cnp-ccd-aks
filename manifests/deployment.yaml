---
#
# NAMESPACE
#
apiVersion: v1
kind: Namespace
metadata:
  name: ccd
---
#
# IDAM-AUTHENTICATION-WEB CONFIG
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: idam-authentication-web
  namespace: ccd
data:
  IDAM_API_URL: 'http://idam-api'
  IDAM_API_OAUTH2_CLIENT_CLIENT_SECRETS_BULK_SCAN_ORCHESTRATOR: '123456'
  IDAM_API_OAUTH2_CLIENT_CLIENT_SECRETS_CCD_GATEWAY: '123456'
  IDAM_CONTINUE_URL_VALIDATOR_ENFORCE_TLS: 'false'
---
#
# IDAM-API CONFIG
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: idam-api
  namespace: ccd
data:
  JAVA_OPTS: '-Xms8m -Xmx256m -Djava.security.egd=file:/dev/./urandom -XX:MaxMetaspaceSize=128m'
  SPRING_DATASOURCE_URL: 'jdbc:postgresql://shared-database:5432/idam'
  IDAM_TESTING_SUPPORT_ENABLED: 'true'
  SPRING_MAIL_HOST: 'smtp-server'
  NOTIFY_API_KEY: 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'
  NOTIFY: 'false'
  NOTIFY_CMC_WELCOME_USER_TEMPLATE: 'fake'
  NOTIFY_DIVORCE_WELCOME_USER_TEMPLATE: 'fake'
  NOTIFY_SSCS_WELCOME_USER_TEMPLATE: 'fake'
  NOTIFY_RESET_PASSWORD_TEMPLATE: 'fake'
  NOTIFY_PROBATE_ACTIVATE_USER_TEMPLATE: 'fake'
  NOTIFY_DIVORCE_ACTIVATE_USER_TEMPLATE: 'fake'
  NOTIFY_SSCS_ACTIVATE_USER_TEMPLATE: 'fake'
  NOTIFY_CCD_ACTIVATE_USER_TEMPLATE: 'fake'
  NOTIFY_BAR_ACTIVATE_USER_TEMPLATE: 'fake'
  NOTIFY_FREG_ACTIVATE_USER_TEMPLATE: 'fake'
  IDAM_API_OAUTH2_CLIENT_CLIENT_SECRETS_CMC_CITIZEN: '123456'
  IDAM_API_OAUTH2_CLIENT_CLIENT_SECRETS_CMC_LEGAL: '123456'
  IDAM_API_OAUTH2_CLIENT_CLIENT_SECRETS_CCD_GATEWAY: '123456'
  http_proxy: ''
  https_proxy: ''
  no_proxy: ''
  REFORM_ENVIRONMENT: 'test'
  IDAM_BSP_SYSTEMUPDATE_USER: 'bulkscanorchestrator+systemupdate@gmail.com'
  IDAM_BSP_SYSTEMUPDATE_PASSWORD: 'Password12'
  IDAM_API_OAUTH2_CLIENT_CLIENT_SECRETS_BSP: '123456'
  IDAM_BSP_WHITELIST: 'https://localhost/receiver'
---
#
# SERVICE-AUTH-PROVIDER-API CONFIG
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: service-auth-provider-api
  namespace: ccd
data:
  SERVER_PORT: '8080'
  JAVA_OPTS: '-Xms8m -Xmx256m -Djava.security.egd=file:/dev/./urandom -XX:MaxMetaspaceSize=128m'
  JWT_KEY: 'wThK0f0/lh3FlxFcL4xUWDMI5C1J9KyQBgXV4wseh1e5J1uYJIjvTvArHxQDrYoHJ23xFxjHkOnvNbR5dXRoxA=='
  MICROSERVICE_KEYS_BULK_SCAN_ORCHESTRATOR: 'AAAAAAAAAAAAAAAA'
  MICROSERVICE_KEYS_EM_GW: 'AAAAAAAAAAAAAAAA'
  MICROSERVICE_KEYS_CCD_DATA: 'AAAAAAAAAAAAAAAA'
  MICROSERVICE_KEYS_CCD_DEFINITION: 'AAAAAAAAAAAAAAAA'
  MICROSERVICE_KEYS_CCD_GW: 'AAAAAAAAAAAAAAAA'
  TESTING_SUPPORT_ENABLED: 'true'
---
#
# CCD-USER-PROFILE-API CONFIG
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: ccd-user-profile-api
  namespace: ccd
data:
  JAVA_OPTS: '-Xms8m -Xmx256m -Djava.security.egd=file:/dev/./urandom -XX:MaxMetaspaceSize=128m'
  USER_PROFILE_DB_HOST: 'shared-database'
  USER_PROFILE_DB_PORT: '5432'
  USER_PROFILE_DB_USERNAME: 'ccd_user_profile'
  USER_PROFILE_DB_PASSWORD: 'ccd_user_profile'
  USER_PROFILE_S2S_AUTHORISED_SERVICES: 'ccd_data,ccd_definition'
  IDAM_S2S_URL: 'http://service-auth-provider-api'
  REFORM_SERVICE_NAME: 'ccd-user-profile-api'
  REFORM_TEAM: 'ccd'
  REFORM_ENVIRONMENT: 'local'
  APPINSIGHTS_INSTRUMENTATIONKEY: 'fake-key'
  USER_PROFILE_DB_USE_SSL: 'false'
---
#
# CCD-DEFINITION-STORE-API CONFIG
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: ccd-definition-store-api
  namespace: ccd
data:
  JAVA_OPTS: '-Xms8m -Xmx256m -Djava.security.egd=file:/dev/./urandom -XX:MaxMetaspaceSize=128m'
  DEFINITION_STORE_DB_HOST: 'shared-database'
  DEFINITION_STORE_DB_PORT: '5432'
  DEFINITION_STORE_DB_USERNAME: 'ccd_definition_store'
  DEFINITION_STORE_DB_PASSWORD: 'ccd_definition_store'
  SPRING_DATASOURCE_URL: 'jdbc:postgresql://shared-database:5432/ccd_definition_store'
  DEFINITION_STORE_IDAM_KEY: 'AAAAAAAAAAAAAAAA'
  DEFINITION_STORE_S2S_AUTHORISED_SERVICES: 'ccd_data,bulk_scan_orchestrator,ccd_gw'
  USER_PROFILE_HOST: 'http://ccd-user-profile-api'
  IDAM_USER_URL: 'http://idam-api'
  IDAM_S2S_URL: 'http://service-auth-provider-api'
  REFORM_SERVICE_NAME: 'ccd-definition-store-api'
  REFORM_TEAM: 'ccd'
  REFORM_ENVIRONMENT: 'local'
  APPINSIGHTS_INSTRUMENTATIONKEY: 'fake-key'
---
#
# CCD-DATA-STORE-API CONFIG
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: ccd-data-store-api
  namespace: ccd
data:
  JAVA_OPTS: '-Xms8m -Xmx256m -Djava.security.egd=file:/dev/./urandom -XX:MaxMetaspaceSize=128m'
  DATA_STORE_DB_HOST: 'shared-database'
  DATA_STORE_DB_PORT: '5432'
  DATA_STORE_DB_USERNAME: 'ccd_data_store'
  DATA_STORE_DB_PASSWORD: 'ccd_data_store'
  DATA_STORE_IDAM_KEY: 'AAAAAAAAAAAAAAAA'
  SPRING_DATASOURCE_URL: 'jdbc:postgresql://shared-database:5432/ccd_data_store?stringtype=unspecified'
  DATA_STORE_TOKEN_SECRET: 'sdsadahjsadhgaskjhdhasghgkjasd'
  DATA_STORE_S2S_AUTHORISED_SERVICES: 'bulk_scan_orchestrator,ccd_gw'
  DEFINITION_STORE_HOST: 'http://ccd-definition-store-api'
  USER_PROFILE_HOST: 'http://ccd-user-profile-api'
  IDAM_USER_URL: 'http://idam-api'
  IDAM_S2S_URL: 'http://service-auth-provider-api'
  REFORM_SERVICE_NAME: 'ccd-data-store-api'
  REFORM_TEAM: 'ccd'
  REFORM_ENVIRONMENT: 'local'
  APPINSIGHTS_INSTRUMENTATIONKEY: 'fake-key'
  CCD_DM_DOMAIN: 'http://dm-store'
---
#
# CCD-CASE-MANAGEMENT-WEB CONFIG
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: ccd-case-management-web
  namespace: ccd
data:
  IDAM_LOGIN_URL: 'https://localhost:8000/login'
  CCD_GATEWAY_BASE_URL: 'http://localhost:3453'
  CCD_ACTIVITY_BASE_URL: 'http://localhost:3455'
  DM_URL: 'http://localhost:3453/documents'
  DM_URL_REMOTE: 'http://dm-store/documents'
---
#
# CCD-API-GATEWAY CONFIG
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: ccd-api-gateway
  namespace: ccd
data:
  IDAM_BASE_URL: 'http://idam-api'
  IDAM_USER_URL: 'http://idam-api'
  IDAM_LOGOUT_URL: 'https://localhost:8000/login/logout'
  IDAM_OAUTH2_TOKEN_ENDPOINT: 'http://idam-api/oauth2/token'
  IDAM_S2S_URL: 'http://service-auth-provider-api'
  IDAM_SERVICE_KEY: 'AAAAAAAAAAAAAAAA'
  IDAM_SERVICE_NAME: 'ccd_gw'
  IDAM_OAUTH2_CLIENT_SECRET: '123456'
  PROXY_AGGREGATED: 'http://ccd-data-store-api'
  PROXY_DATA: 'http://ccd-data-store-api'
  PROXY_DEFINITION_IMPORT: 'http://ccd-definition-store-api'
  PROXY_DOCUMENT_MANAGEMENT: 'http://dm-store'
---
#
# DM-STORE CONFIG
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: dm-store
  namespace: ccd
data:
  JAVA_OPTS: '-Xms8m -Xmx256m -Djava.security.egd=file:/dev/./urandom -XX:MaxMetaspaceSize=128m'
  SERVER_PORT: '4460'
  SPRING_DATASOURCE_URL: 'jdbc:postgresql://shared-database:5432/evidence'
  SPRING_DATASOURCE_USERNAME: 'evidence'
  SPRING_DATASOURCE_PASSWORD: 'evidence'
  IDAM_USER_BASE_URI: 'http://idam-api'
  IDAM_S2S_BASE_URI: 'http://service-auth-provider-api'
  S2S_NAMES_WHITELIST: 'ccd_gw,cmc,bulk_scan_orchestrator,ccd_data'
  http_proxy: ''
  https_proxy: ''
  no_proxy: ''
  ROOT_APPENDER: 'CONSOLE'
  REFORM_SERVICE_TYPE: 'java'
  REFORM_SERVICE_NAME: 'dm-store'
  REFORM_TEAM: 'evidence'
  REFORM_ENVIRONMENT: 'docker'
  ENABLE_DELETE: 'true'
  ENABLE_IDAM_HEALTH_CHECK: 'false'
  ENABLE_METADATA_SEARCH: 'true'
  ENABLE_DOCUMENT_AND_METADATA_UPLOAD: 'false'
  ENABLE_FOLDER_API: 'true'
  ENABLE_TTL: 'true'
  ENABLE_THUMBNAIL: 'true'
  DM_MULTIPART_WHITELIST: 'image/jpeg,application/pdf,image/tiff,image/png,image/bmp,text/plain,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/vnd.openxmlformats-officedocument.wordprocessingml.template,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.openxmlformats-officedocument.spreadsheetml.template,application/vnd.ms-powerpoint,application/vnd.openxmlformats-officedocument.presentationml.presentation,application/vnd.openxmlformats-officedocument.presentationml.template,application/vnd.openxmlformats-officedocument.presentationml.slideshow'
  DM_MULTIPART_WHITELIST_EXT: '.jpg,.jpeg,.bmp,.tif,.tiff,.png,.pdf,.txt,.doc,.dot,.docx,.dotx,.xls,.xlt,.xla,.xlsx,.xltx,.xlsb,.ppt,.pot,.pps,.ppa,.pptx,.potx,.ppsx'
  MAX_FILE_SIZE: '500MB'
  MAX_ACTIVE_DB_CONNECTIONS: '10'
  ENDPOINTS_HEALTH_SENSITIVE: 'false'
  ENDPOINTS_INFO_SENSITIVE: 'false'
  CASE_WORKER_ROLES: 'caseworker-sscs'
---
#
# CCD-IMPORTER CONFIG
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: ccd-importer
  namespace: ccd
data:
  WAIT_HOSTS: 'ccd-user-profile-api, ccd-definition-store-api, service-auth-provider-api, ccd-api-gateway, idam-api'
  VERBOSE: '${VERBOSE:-false}'
  WAIT_HOSTS_TIMEOUT: '600'
---
#
# IDAM-AUTHENTICATION-WEB
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: idam-authentication-web
  namespace: ccd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: idam-authentication-web
  template:
    metadata:
      labels:
        app: idam-authentication-web
    spec:
      containers:
      - image: hmctssandbox.azurecr.io/hmcts/idam-authentication-web
        name: idam-authentication-web
        envFrom:
          - configMapRef:
              name: idam-authentication-web
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "256Mi"
            cpu: "1000m"
        ports:
        - containerPort: 8000
          name: http
        imagePullPolicy: Always
---
#
# IDAM-AUTHENTICATION-WEB SERVICE
#
apiVersion: v1
kind: Service
metadata:
  name: idam-authentication-web
  namespace: ccd
  labels:
    app: idam-authentication-web
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8000
  selector:
    app: idam-authentication-web
---
#
# IDAM-API
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: idam-api
  namespace: ccd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: idam-api
  template:
    metadata:
      labels:
        app: idam-api
    spec:
      containers:
      - image: hmctssandbox.azurecr.io/hmcts/idam-api
        name: idam-api
        envFrom:
          - configMapRef:
              name: idam-api
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "2000m"
        ports:
        - containerPort: 8080
          name: http
        imagePullPolicy: Always
---
#
# IDAM-API SERVICE
#
apiVersion: v1
kind: Service
metadata:
  name: idam-api
  namespace: ccd
  labels:
    app: idam-api
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    app: idam-api
---
#
# SERVICE-AUTH-PROVIDER-API
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-auth-provider-api
  namespace: ccd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-auth-provider-api
  template:
    metadata:
      labels:
        app: service-auth-provider-api
    spec:
      containers:
      - image: hmcts/service-auth-provider-app
        name: service-auth-provider-api
        envFrom:
          - configMapRef:
              name: service-auth-provider-api
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "2000m"
        ports:
        - containerPort: 8080
          name: http
        imagePullPolicy: Always
---
#
# SERVICE-AUTH-PROVIDER-API SERVICE
#
apiVersion: v1
kind: Service
metadata:
  name: service-auth-provider-api
  namespace: ccd
  labels:
    app: service-auth-provider-api
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    app: service-auth-provider-api
---
#
# CCD-USER-PROFILE-API
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ccd-user-profile-api
  namespace: ccd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ccd-user-profile-api
  template:
    metadata:
      labels:
        app: ccd-user-profile-api
    spec:
      containers:
      - image: hmcts/ccd-user-profile-api:latest
        name: ccd-user-profile-api
        envFrom:
          - configMapRef:
              name: ccd-user-profile-api
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "2500m"
        ports:
        - containerPort: 4453
          name: http
        imagePullPolicy: Always
---
#
# CCD-USER-PROFILE-API SERVICE
#
apiVersion: v1
kind: Service
metadata:
  name: ccd-user-profile-api
  namespace: ccd
  labels:
    app: ccd-user-profile-api
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 4453
  selector:
    app: ccd-user-profile-api
---
#
# CCD-DEFINITION-STORE-API
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ccd-definition-store-api
  namespace: ccd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ccd-definition-store-api
  template:
    metadata:
      labels:
        app: ccd-definition-store-api
    spec:
      containers:
      - image: hmcts/ccd-definition-store-api:latest
        name: ccd-definition-store-api
        envFrom:
          - configMapRef:
              name: ccd-definition-store-api
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "2500m"
        ports:
        - containerPort: 4451
          name: http
        imagePullPolicy: Always
---
#
# CCD-DEFINITION-STORE-API SERVICE
#
apiVersion: v1
kind: Service
metadata:
  name: ccd-definition-store-api
  namespace: ccd
  labels:
    app: ccd-definition-store-api
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 4451
  selector:
    app: ccd-definition-store-api
---
#
# CCD-DATA-STORE-API
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ccd-data-store-api
  namespace: ccd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ccd-data-store-api
  template:
    metadata:
      labels:
        app: ccd-data-store-api
    spec:
      containers:
      - image: hmcts/ccd-data-store-api:latest
        name: ccd-data-store-api
        envFrom:
          - configMapRef:
              name: ccd-data-store-api
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "2500m"
        ports:
        - containerPort: 4452
          name: http
        imagePullPolicy: Always
---
#
# CCD-DATA-STORE-API SERVICE
#
apiVersion: v1
kind: Service
metadata:
  name: ccd-data-store-api
  namespace: ccd
  labels:
    app: ccd-data-store-api
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 4552
  selector:
    app: ccd-data-store-api
---
#
# CCD-CASE-MANAGEMENT-WEB
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ccd-case-management-web
  namespace: ccd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ccd-case-management-web
  template:
    metadata:
      labels:
        app: ccd-case-management-web
    spec:
      containers:
      - image: hmcts/ccd-case-management-web:latest
        name: ccd-case-management-web
        envFrom:
          - configMapRef:
              name: ccd-case-management-web
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "256Mi"
            cpu: "2500m"
        ports:
        - containerPort: 3451
          name: http
        imagePullPolicy: Always
---
#
# CCD-CASE-MANAGEMENT-WEB SERVICE
#
apiVersion: v1
kind: Service
metadata:
  name: ccd-case-management-web
  namespace: ccd
  labels:
    app: ccd-case-management-web
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 3451
  selector:
    app: ccd-case-management-web
---
#
# CCD-API-GATEWAY
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ccd-api-gateway
  namespace: ccd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ccd-api-gateway
  template:
    metadata:
      labels:
        app: ccd-api-gateway
    spec:
      containers:
      - image: hmcts/ccd-api-gateway:latest
        name: ccd-api-gateway
        envFrom:
          - configMapRef:
              name: ccd-api-gateway
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "256Mi"
            cpu: "2500m"
        ports:
        - containerPort: 3453
          name: http
        imagePullPolicy: Always
---
#
# CCD-API-GATEWAY SERVICE
#
apiVersion: v1
kind: Service
metadata:
  name: ccd-api-gateway
  namespace: ccd
  labels:
    app: ccd-api-gateway
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 3453
  selector:
    app: ccd-api-gateway
---
#
# DM-STORE
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dm-store
  namespace: ccd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dm-store
  template:
    metadata:
      labels:
        app: dm-store
    spec:
      containers:
      - image: hmcts/dm-store:latest
        name: dm-store
        envFrom:
          - configMapRef:
              name: dm-store
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "2500m"
        ports:
        - containerPort: 4660
          name: http
        imagePullPolicy: Always
---
#
# CCD-IMPORTER
#
apiVersion: batch/v1
kind: Job
metadata:
  name: ccd-importer
  namespace: ccd
spec:
  template:
    spec:
      containers:
      - name: ccd-importer
        image: hmctssandbox.azurecr.io/hmcts/bulk-scan-ccd-importer
        envFrom:
          - configMapRef:
              name: ccd-importer
      restartPolicy: Never
  backoffLimit: 4
---
#
# DM-STORE SERVICE
#
apiVersion: v1
kind: Service
metadata:
  name: dm-store
  namespace: ccd
  labels:
    app: dm-store
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 4660
  selector:
    app: dm-store
---
#
# SHARED-DATABASE
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shared-database
  namespace: ccd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shared-database
  template:
    metadata:
      labels:
        app: shared-database
    spec:
      containers:
      - image: hmctssandbox.azurecr.io/hmcts/ccd-postgres:10.5-alpine-v0.1
        name: shared-database
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "320Mi"
            cpu: "1000m"
        imagePullPolicy: Always
        ports:
          - containerPort: 5432
            name: postgres
---
#
# SHARED-DATABASE SERVICE
#
apiVersion: v1
kind: Service
metadata:
  name: shared-database
  namespace: ccd
  labels:
    app: shared-database
spec:
  ports:
    - port: 5432
  selector:
    app: shared-database
  clusterIP: None
---
#
# SMTP-SERVER
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: smtp-server
  namespace: ccd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: smtp-server
  template:
    metadata:
      labels:
        app: smtp-server
    spec:
      containers:
      - image: mailhog/mailhog
        name: smtp-server
        resources:
          requests:
            memory: "16Mi"
            cpu: "100m"
          limits:
            memory: "32Mi"
            cpu: "200m"
        imagePullPolicy: Always
        ports:
          - containerPort: 1025
            name: smtp-server
---
#
# SMTP-SERVER SERVICE
#
apiVersion: v1
kind: Service
metadata:
  name: smtp-server
  namespace: ccd
  labels:
    app: smtp-server
spec:
  ports:
    - port: 1025
  selector:
    app: smtp-server
  clusterIP: None